/*This file is part of OpenDXMC.

OpenDXMC is free software : you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OpenDXMC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with OpenDXMC. If not, see < https://www.gnu.org/licenses/>.

Copyright 2019 Erlend Andersen
*/

#pragma once
#include <QColor>
#include <QVector>
#include <array>
#include <cmath>

const QVector<double> MAGMA = { 0.001462, 0.000466, 0.013866, 0.04383, 0.03383, 0.141886, 0.123833, 0.067295, 0.295879, 0.232077, 0.059889, 0.437695, 0.341482, 0.080564, 0.492631, 0.445163, 0.122724, 0.506901, 0.550287, 0.161158, 0.505719, 0.658483, 0.196027, 0.490253, 0.767398, 0.233705, 0.457755, 0.868793, 0.287728, 0.409303, 0.944006, 0.377643, 0.365136, 0.981, 0.498428, 0.369734, 0.994738, 0.62435, 0.427397, 0.997228, 0.747981, 0.516859, 0.99317, 0.870024, 0.626189, 0.987053, 0.991438, 0.749504, };
const QVector<double> SPRING = { 1.0, 0.0, 1.0, 1.0, 0.0666666666667, 0.933333333333, 1.0, 0.133333333333, 0.866666666667, 1.0, 0.2, 0.8, 1.0, 0.266666666667, 0.733333333333, 1.0, 0.333333333333, 0.666666666667, 1.0, 0.4, 0.6, 1.0, 0.466666666667, 0.533333333333, 1.0, 0.533333333333, 0.466666666667, 1.0, 0.6, 0.4, 1.0, 0.666666666667, 0.333333333333, 1.0, 0.733333333333, 0.266666666667, 1.0, 0.8, 0.2, 1.0, 0.866666666667, 0.133333333333, 1.0, 0.933333333333, 0.0666666666667, 1.0, 1.0, 0.0, };
const QVector<double> SUMMER = { 0.0, 0.5, 0.4, 0.0666666666667, 0.533333333333, 0.4, 0.133333333333, 0.566666666667, 0.4, 0.2, 0.6, 0.4, 0.266666666667, 0.633333333333, 0.4, 0.333333333333, 0.666666666667, 0.4, 0.4, 0.7, 0.4, 0.466666666667, 0.733333333333, 0.4, 0.533333333333, 0.766666666667, 0.4, 0.6, 0.8, 0.4, 0.666666666667, 0.833333333333, 0.4, 0.733333333333, 0.866666666667, 0.4, 0.8, 0.9, 0.4, 0.866666666667, 0.933333333333, 0.4, 0.933333333333, 0.966666666667, 0.4, 1.0, 1.0, 0.4, };
const QVector<double> COOL = { 0.0, 1.0, 1.0, 0.0666666666667, 0.933333333333, 1.0, 0.133333333333, 0.866666666667, 1.0, 0.2, 0.8, 1.0, 0.266666666667, 0.733333333333, 1.0, 0.333333333333, 0.666666666667, 1.0, 0.4, 0.6, 1.0, 0.466666666667, 0.533333333333, 1.0, 0.533333333333, 0.466666666667, 1.0, 0.6, 0.4, 1.0, 0.666666666667, 0.333333333333, 1.0, 0.733333333333, 0.266666666667, 1.0, 0.8, 0.2, 1.0, 0.866666666667, 0.133333333333, 1.0, 0.933333333333, 0.0666666666667, 1.0, 1.0, 0.0, 1.0, };
const QVector<double> TERRAIN = { 0.2, 0.2, 0.6, 0.111111111111, 0.377777777778, 0.777777777778, 0.0222222222222, 0.555555555556, 0.955555555556, 0.0, 0.7, 0.7, 0.0666666666667, 0.813333333333, 0.413333333333, 0.333333333333, 0.866666666667, 0.466666666667, 0.6, 0.92, 0.52, 0.866666666667, 0.973333333333, 0.573333333333, 0.933333333333, 0.914666666667, 0.564, 0.8, 0.744, 0.492, 0.666666666667, 0.573333333333, 0.42, 0.533333333333, 0.402666666667, 0.348, 0.6, 0.488, 0.464, 0.733333333333, 0.658666666667, 0.642666666667, 0.866666666667, 0.829333333333, 0.821333333333, 1.0, 1.0, 1.0, };
const QVector<double> BRG = { 0.0, 0.0, 1.0, 0.133333333333, 0.0, 0.866666666667, 0.266666666667, 0.0, 0.733333333333, 0.4, 0.0, 0.6, 0.533333333333, 0.0, 0.466666666667, 0.666666666667, 0.0, 0.333333333333, 0.8, 0.0, 0.2, 0.933333333333, 0.0, 0.0666666666667, 0.933333333333, 0.0666666666667, 0.0, 0.8, 0.2, 0.0, 0.666666666667, 0.333333333333, 0.0, 0.533333333333, 0.466666666667, 0.0, 0.4, 0.6, 0.0, 0.266666666667, 0.733333333333, 0.0, 0.133333333333, 0.866666666667, 0.0, 0.0, 1.0, 0.0, };
const QVector<double> HSV = { 1.0, 0.0, 0.0, 1.0, 0.39375039375, 0.0, 1.0, 0.787500787501, 0.0, 0.818748818749, 1.0, 0.0, 0.424998424998, 1.0, 0.0, 0.0312493437493, 1.0, 1.31250131245e-06, 0.0, 1.0, 0.362500472497, 0.0, 1.0, 0.756248385634, 0.0, 0.850002756253, 1.0, 0.0, 0.456252362502, 1.0, 0.0, 0.062501968752, 1.0, 0.331248424998, 0.0, 1.0, 0.724998818749, 0.0, 1.0, 1.0, 0.0, 0.881250787501, 1.0, 0.0, 0.48750039375, 1.0, 0.0, 0.09375, };
const QVector<double> BONE = { 0.0, 0.0, 0.0, 0.0583333333333, 0.0583333105072, 0.0811594202899, 0.116666666667, 0.116666621014, 0.16231884058, 0.175, 0.174999931522, 0.24347826087, 0.233333333333, 0.233333242029, 0.324637681159, 0.291666666667, 0.291666552536, 0.405797101449, 0.35, 0.361458320963, 0.474999881875, 0.408333333333, 0.441666640625, 0.533333228333, 0.466666666667, 0.521874960286, 0.591666574792, 0.525, 0.602083279948, 0.64999992125, 0.583333333333, 0.682291599609, 0.708333267708, 0.641666666667, 0.762499919271, 0.766666614167, 0.726562401562, 0.825, 0.824999960625, 0.817708267708, 0.883333333333, 0.883333307083, 0.908854133854, 0.941666666667, 0.941666653542, 1.0, 1.0, 1.0, };
const QVector<double> SIMPLE = { 1, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0 };
const QVector<double> GRAY = { 0.0, 0.0, 0.0, 1.0, 1.0, 1.0 };
const QVector<double> CT = { 0, 0, 0, .55, .25, .15, .88, .60, .29, 1, .94, .95, .83, .66, 1 };
const QVector<double> HOT_IRON = { 0,0,0,0.5,0,0,1,0,0,1,.5,0,1,1,1 };
const QVector<double> PET = { 0,0,0,0,.5,.5,.5,0,1,1,.5,0,1,1,1 };
const QVector<double> JET = { 0,0,.5, 0,0,1, 0,0.5,1 ,0,1,1 ,0.5,1,0.5, 1,1,0, 1,0.5,0, 1,0,0, 0.5,0,0 };


QColor getQColor(int index);
std::array<double, 3> getColor(int index);
std::array<double, 768> generateStandardColorTable(const QVector<double>& colorTable);

