/*This file is part of OpenDXMC.

OpenDXMC is free software : you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OpenDXMC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with OpenDXMC. If not, see < https://www.gnu.org/licenses/>.

Copyright 2023 Erlend Andersen
*/

#include <colormaps.hpp>

#include <cmath>
#include <map>
#include <numbers>

const std::vector<double> MAGMA = {
    0.001462,
    0.000466,
    0.013866,
    0.04383,
    0.03383,
    0.141886,
    0.123833,
    0.067295,
    0.295879,
    0.232077,
    0.059889,
    0.437695,
    0.341482,
    0.080564,
    0.492631,
    0.445163,
    0.122724,
    0.506901,
    0.550287,
    0.161158,
    0.505719,
    0.658483,
    0.196027,
    0.490253,
    0.767398,
    0.233705,
    0.457755,
    0.868793,
    0.287728,
    0.409303,
    0.944006,
    0.377643,
    0.365136,
    0.981,
    0.498428,
    0.369734,
    0.994738,
    0.62435,
    0.427397,
    0.997228,
    0.747981,
    0.516859,
    0.99317,
    0.870024,
    0.626189,
    0.987053,
    0.991438,
    0.749504,
};
const std::vector<double> SPRING = {
    1.0,
    0.0,
    1.0,
    1.0,
    0.0666666666667,
    0.933333333333,
    1.0,
    0.133333333333,
    0.866666666667,
    1.0,
    0.2,
    0.8,
    1.0,
    0.266666666667,
    0.733333333333,
    1.0,
    0.333333333333,
    0.666666666667,
    1.0,
    0.4,
    0.6,
    1.0,
    0.466666666667,
    0.533333333333,
    1.0,
    0.533333333333,
    0.466666666667,
    1.0,
    0.6,
    0.4,
    1.0,
    0.666666666667,
    0.333333333333,
    1.0,
    0.733333333333,
    0.266666666667,
    1.0,
    0.8,
    0.2,
    1.0,
    0.866666666667,
    0.133333333333,
    1.0,
    0.933333333333,
    0.0666666666667,
    1.0,
    1.0,
    0.0,
};
const std::vector<double> SUMMER = {
    0.0,
    0.5,
    0.4,
    0.0666666666667,
    0.533333333333,
    0.4,
    0.133333333333,
    0.566666666667,
    0.4,
    0.2,
    0.6,
    0.4,
    0.266666666667,
    0.633333333333,
    0.4,
    0.333333333333,
    0.666666666667,
    0.4,
    0.4,
    0.7,
    0.4,
    0.466666666667,
    0.733333333333,
    0.4,
    0.533333333333,
    0.766666666667,
    0.4,
    0.6,
    0.8,
    0.4,
    0.666666666667,
    0.833333333333,
    0.4,
    0.733333333333,
    0.866666666667,
    0.4,
    0.8,
    0.9,
    0.4,
    0.866666666667,
    0.933333333333,
    0.4,
    0.933333333333,
    0.966666666667,
    0.4,
    1.0,
    1.0,
    0.4,
};
const std::vector<double> COOL = {
    0.0,
    1.0,
    1.0,
    0.0666666666667,
    0.933333333333,
    1.0,
    0.133333333333,
    0.866666666667,
    1.0,
    0.2,
    0.8,
    1.0,
    0.266666666667,
    0.733333333333,
    1.0,
    0.333333333333,
    0.666666666667,
    1.0,
    0.4,
    0.6,
    1.0,
    0.466666666667,
    0.533333333333,
    1.0,
    0.533333333333,
    0.466666666667,
    1.0,
    0.6,
    0.4,
    1.0,
    0.666666666667,
    0.333333333333,
    1.0,
    0.733333333333,
    0.266666666667,
    1.0,
    0.8,
    0.2,
    1.0,
    0.866666666667,
    0.133333333333,
    1.0,
    0.933333333333,
    0.0666666666667,
    1.0,
    1.0,
    0.0,
    1.0,
};
const std::vector<double> TERRAIN = {
    0.2,
    0.2,
    0.6,
    0.111111111111,
    0.377777777778,
    0.777777777778,
    0.0222222222222,
    0.555555555556,
    0.955555555556,
    0.0,
    0.7,
    0.7,
    0.0666666666667,
    0.813333333333,
    0.413333333333,
    0.333333333333,
    0.866666666667,
    0.466666666667,
    0.6,
    0.92,
    0.52,
    0.866666666667,
    0.973333333333,
    0.573333333333,
    0.933333333333,
    0.914666666667,
    0.564,
    0.8,
    0.744,
    0.492,
    0.666666666667,
    0.573333333333,
    0.42,
    0.533333333333,
    0.402666666667,
    0.348,
    0.6,
    0.488,
    0.464,
    0.733333333333,
    0.658666666667,
    0.642666666667,
    0.866666666667,
    0.829333333333,
    0.821333333333,
    1.0,
    1.0,
    1.0,
};
const std::vector<double> BRG = {
    0.0,
    0.0,
    1.0,
    0.133333333333,
    0.0,
    0.866666666667,
    0.266666666667,
    0.0,
    0.733333333333,
    0.4,
    0.0,
    0.6,
    0.533333333333,
    0.0,
    0.466666666667,
    0.666666666667,
    0.0,
    0.333333333333,
    0.8,
    0.0,
    0.2,
    0.933333333333,
    0.0,
    0.0666666666667,
    0.933333333333,
    0.0666666666667,
    0.0,
    0.8,
    0.2,
    0.0,
    0.666666666667,
    0.333333333333,
    0.0,
    0.533333333333,
    0.466666666667,
    0.0,
    0.4,
    0.6,
    0.0,
    0.266666666667,
    0.733333333333,
    0.0,
    0.133333333333,
    0.866666666667,
    0.0,
    0.0,
    1.0,
    0.0,
};
const std::vector<double> HSV = {
    1.0,
    0.0,
    0.0,
    1.0,
    0.39375039375,
    0.0,
    1.0,
    0.787500787501,
    0.0,
    0.818748818749,
    1.0,
    0.0,
    0.424998424998,
    1.0,
    0.0,
    0.0312493437493,
    1.0,
    1.31250131245e-06,
    0.0,
    1.0,
    0.362500472497,
    0.0,
    1.0,
    0.756248385634,
    0.0,
    0.850002756253,
    1.0,
    0.0,
    0.456252362502,
    1.0,
    0.0,
    0.062501968752,
    1.0,
    0.331248424998,
    0.0,
    1.0,
    0.724998818749,
    0.0,
    1.0,
    1.0,
    0.0,
    0.881250787501,
    1.0,
    0.0,
    0.48750039375,
    1.0,
    0.0,
    0.09375,
};
const std::vector<double> BONE = {
    0.0,
    0.0,
    0.0,
    0.0583333333333,
    0.0583333105072,
    0.0811594202899,
    0.116666666667,
    0.116666621014,
    0.16231884058,
    0.175,
    0.174999931522,
    0.24347826087,
    0.233333333333,
    0.233333242029,
    0.324637681159,
    0.291666666667,
    0.291666552536,
    0.405797101449,
    0.35,
    0.361458320963,
    0.474999881875,
    0.408333333333,
    0.441666640625,
    0.533333228333,
    0.466666666667,
    0.521874960286,
    0.591666574792,
    0.525,
    0.602083279948,
    0.64999992125,
    0.583333333333,
    0.682291599609,
    0.708333267708,
    0.641666666667,
    0.762499919271,
    0.766666614167,
    0.726562401562,
    0.825,
    0.824999960625,
    0.817708267708,
    0.883333333333,
    0.883333307083,
    0.908854133854,
    0.941666666667,
    0.941666653542,
    1.0,
    1.0,
    1.0,
};
const std::vector<double> SIMPLE = { 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0 };
const std::vector<double> GRAY = { 0.0, 0.0, 0.0, 1.0, 1.0, 1.0 };
const std::vector<double> CT = { 0, 0, 0, .55, .25, .15, .88, .60, .29, 1, .94, .95, .83, .66, 1 };
const std::vector<double> HOT_IRON = { 0, 0, 0, 0.5, 0, 0, 1, 0, 0, 1, .5, 0, 1, 1, 1 };
const std::vector<double> PET = { 0, 0, 0, 0, .5, .5, .5, 0, 1, 1, .5, 0, 1, 1, 1 };
const std::vector<double> JET = { 0, 0, .5, 0, 0, 1, 0, 0.5, 1, 0, 1, 1, 0.5, 1, 0.5, 1, 1, 0, 1, 0.5, 0, 1, 0, 0, 0.5, 0, 0 };
const std::vector<double> TURBO = { 0.18995, 0.07176, 0.23217, 0.225, 0.16354, 0.45096, 0.25107, 0.25237, 0.63374, 0.26816, 0.33825, 0.7805, 0.27628, 0.42118, 0.89123, 0.27543, 0.50115, 0.96594, 0.25862, 0.57958, 0.99876, 0.21382, 0.65886, 0.97959, 0.15844, 0.73551, 0.92305, 0.11167, 0.80569, 0.84525, 0.09267, 0.86554, 0.7623, 0.12014, 0.91193, 0.6866, 0.19659, 0.94901, 0.59466, 0.30513, 0.97697, 0.48987, 0.42778, 0.99419, 0.38575, 0.54658, 0.99907, 0.29581, 0.64362, 0.98999, 0.23356, 0.72596, 0.9647, 0.2064, 0.80473, 0.92452, 0.20459, 0.8753, 0.87267, 0.21555, 0.93301, 0.81236, 0.22667, 0.97323, 0.74682, 0.22536, 0.99314, 0.67408, 0.20348, 0.99593, 0.58703, 0.16899, 0.9836, 0.49291, 0.12849, 0.95801, 0.39958, 0.08831, 0.92105, 0.31489, 0.05475, 0.87422, 0.24526, 0.03297, 0.81608, 0.18462, 0.01809, 0.74617, 0.13098, 0.00851, 0.66449, 0.08436, 0.00424, 0.57103, 0.04474, 0.00529 };

const std::vector<double> CT_AAA = { 0.0, 0.0, 0.0, 0.07898005423319011, 0.04577830110448983, 0.0236437562587686, 0.15796010846638014, 0.0915566022089796, 0.04728751251753717, 0.23694016269957024, 0.13733490331346943, 0.07093126877630578, 0.3159202169327603, 0.18311320441795922, 0.09457502503507435, 0.3949002711659504, 0.22889150552244902, 0.11821878129384294, 0.4738803253991405, 0.27466980662693885, 0.14186253755261155, 0.5528603796323305, 0.3204481077314286, 0.1655062938113801, 1.0, 0.996235212411187, 0.9972814152353496, 0.9861203976910636, 0.9146542537959252, 0.9581884633141022, 0.9596754980758864, 0.8720158781632711, 0.9651570527617519, 0.9332305984607091, 0.8293775025306169, 0.9721256422094015, 0.9067856988455318, 0.7867391268979627, 0.9790942316570511, 0.8803407992303546, 0.7441007512653084, 0.9860628211047008, 0.8538958996151773, 0.7014623756326542, 0.9930314105523503, 0.827451, 0.658824, 1.0 };
const std::vector<double> CT_AAA2 = { 0.0, 0.0, 0.0, 0.07074113066090978, 0.032338728959373314, 0.019201200850768235, 0.14148226132181949, 0.06467745791874659, 0.03840240170153645, 0.21222339198272927, 0.0970161868781199, 0.057603602552304685, 0.28296452264363897, 0.1293549158374932, 0.07680480340307291, 0.35370565330454873, 0.1616936447968665, 0.09600600425384113, 0.42444678396545854, 0.1940323737562398, 0.11520720510460937, 0.49518791462636824, 0.2263711027156131, 0.1344084059553776, 0.9941293730824511, 0.8745329976468712, 0.45921894221318177, 1.0, 0.8748329352874307, 0.718844320794824, 1.0, 0.8552507838927839, 0.8215641566010652, 1.0, 0.835668632498137, 0.9242839924073063, 0.9684021891279728, 0.7980458619954833, 0.9656274789414785, 0.9214184594186486, 0.7516385746636556, 0.9770849859609856, 0.8744347297093243, 0.7052312873318278, 0.9885424929804928, 0.827451, 0.658824, 1.0 };
const std::vector<double> CT_Bone = { 0.0, 0.0, 0.0, 0.09854665606137154, 0.03443834173739359, 0.04079621230655351, 0.19709331212274298, 0.06887668347478713, 0.08159242461310698, 0.29563996818411453, 0.10331502521218072, 0.12238863691966048, 0.394186624245486, 0.13775336694957427, 0.16318484922621398, 0.4927332803068575, 0.17219170868696784, 0.20398106153276746, 0.5912799363682291, 0.20663005042436144, 0.24477727383932096, 0.6898265924296004, 0.241068392161755, 0.2855734861458744, 0.7946294647229449, 0.46214918500137103, 0.39471489185790626, 0.9036326359538045, 0.8085380010920742, 0.5497418988025493, 0.9212976527831227, 0.8458749184541584, 0.6261651050337879, 0.9370381222264981, 0.8766999347633266, 0.7009320840270302, 0.9527785916698737, 0.9075249510724951, 0.7756990630202728, 0.968519061113249, 0.9383499673816633, 0.8504660420135151, 0.9842595305566245, 0.9691749836908317, 0.9252330210067574, 1.0, 1.0, 1.0 };
const std::vector<double> CT_Bones = { 0.3, 0.3, 1.0, 0.3, 0.4780078125, 0.8219921874999999, 0.3, 0.656015625, 0.643984375, 0.3, 0.8340234374999997, 0.4659765625000002, 0.3064754856614246, 0.9907493061979649, 0.29722479185938944, 0.402283239424775, 0.8538810865360357, 0.2561643259608107, 0.4980909931881254, 0.7170128668741065, 0.21510386006223195, 0.5938987469514758, 0.5801446472121774, 0.17404339416365322, 0.6897065007148262, 0.4432764275502482, 0.13298292826507446, 0.7855142544781767, 0.3064082078883189, 0.09192246236649568, 0.8813220082415272, 0.16953998822638972, 0.05086199646791692, 0.9771297620048773, 0.032671768564460635, 0.00980153056933819, 1.0, 0.46178827385510746, 0.01896923106141827, 1.0, 0.8428079428279736, 0.06736793588565589, 1.0, 0.5714039714139872, 0.18368396794282776, 1.0, 0.3, 0.3 };
const std::vector<double> CT_Cardiac = { 0.0, 0.0, 0.0, 0.0757167227395827, 0.03461328015952144, 0.02055172129003063, 0.1514334454791653, 0.06922656031904285, 0.04110344258006123, 0.227150168218748, 0.10383984047856429, 0.06165516387009186, 0.30286689095833064, 0.1384531206380857, 0.08220688516012248, 0.3785836136979133, 0.17306640079760713, 0.1027586064501531, 0.454300336437496, 0.20767968095712858, 0.12331032774018372, 0.5300170591770786, 0.24229296111665, 0.14386204903021432, 0.7751608610056486, 0.388831027318042, 0.39609199391794947, 0.6437570435265415, 0.08733207650145289, 0.13255752143433286, 0.6743727029387845, 0.1825807304178773, 0.2771312678619439, 0.7049883623510276, 0.27782938433430177, 0.421705014289555, 0.7356040217632708, 0.3730780382507264, 0.5662787607171663, 0.7662196811755138, 0.4683266921671508, 0.7108525071447774, 0.7968353405877568, 0.5635753460835753, 0.8554262535723886, 0.827451, 0.658824, 1.0 };
const std::vector<double> CT_Cardiac2 = { 0.0, 0.0, 0.0, 0.07273970084762783, 0.03325235896458714, 0.019743670941520346, 0.14547940169525558, 0.06650471792917424, 0.03948734188304067, 0.2182191025428834, 0.09975707689376138, 0.059231012824561016, 0.2909588033905112, 0.1330094358583485, 0.07897468376608135, 0.363698504238139, 0.16626179482293563, 0.0987183547076017, 0.4364382050857668, 0.19951415378752277, 0.11846202564912203, 0.5091779059333945, 0.23276651275210988, 0.13820569659064236, 0.9632253655062458, 0.7716098254171262, 0.3713604286168969, 1.0, 0.9114246630791578, 0.725702723013874, 1.0, 0.9491511954713684, 0.8425330446931498, 1.0, 0.9868777278635789, 0.9593633663724256, 0.9691876785714286, 0.9390757142857142, 1.0, 0.9219421190476191, 0.8456584761904762, 1.0, 0.8746965595238096, 0.7522412380952382, 1.0, 0.827451, 0.658824, 1.0 };
const std::vector<double> CT_Cardiac3 = { 0.0, 0.0, 0.0, 0.0, 0.034722754838206436, 0.13834869247831078, 0.0, 0.06944550967641283, 0.2766973849566214, 0.0, 0.10416826451461926, 0.41504607743493216, 0.0, 0.1388910193528257, 0.5533947699132429, 0.0, 0.1736137741910321, 0.6917434623915536, 0.0, 0.20833652902923852, 0.8300921548698643, 0.0, 0.24305928386744494, 0.9684408473481749, 1.0, 0.9387310435425761, 0.6263296680465544, 1.0, 1.0, 0.4946771500924961, 1.0, 1.0, 0.8420103898455503, 0.9793047833993922, 0.9590799644221122, 1.0, 0.9413413375495441, 0.884015973316584, 1.0, 0.9033778916996962, 0.808951982211056, 1.0, 0.8654144458498482, 0.733887991105528, 1.0, 0.827451, 0.658824, 1.0 };
const std::vector<double> CT_Chest_Contrast_Enhanced = { 0.0, 0.0, 0.0, 0.07217222958299357, 0.032992944119958706, 0.01958964273151744, 0.14434445916598707, 0.06598588823991737, 0.03917928546303486, 0.21651668874898064, 0.09897883235987608, 0.0587689281945523, 0.2886889183319742, 0.13197177647983477, 0.07835857092606974, 0.3608611479149677, 0.16496472059979345, 0.09794821365758716, 0.4330333774979613, 0.19795766471975215, 0.1175378563891046, 0.5052056070809547, 0.23095060883971083, 0.13712749912062203, 0.838103403244205, 0.557069329612778, 0.27145503804424964, 0.987299395852277, 0.9165552088836569, 0.9578777813200472, 0.9606579965435642, 0.8736000074030474, 0.9648981511000393, 0.9340165972348514, 0.8306448059224381, 0.9719185208800314, 0.9073751979261385, 0.7876896044418285, 0.9789388906600236, 0.8807337986174257, 0.744734402961219, 0.9859592604400157, 0.854092399308713, 0.7017792014806096, 0.9929796302200079, 0.827451, 0.658824, 1.0 };
const std::vector<double> CT_Chest_Vessels = { 0.0, 0.0, 0.0, 0.1277948767889707, 0.058420382092630264, 0.034687247348170226, 0.2555897535779413, 0.11684076418526046, 0.06937449469634041, 0.38338463036691195, 0.17526114627789072, 0.10406174204451063, 0.5111795071558826, 0.23368152837052095, 0.13874898939268085, 0.6222911554693874, 0.3285614820425116, 0.18005241696605567, 0.7263847846485534, 0.4387786332689224, 0.22413902763166016, 0.8304784138277193, 0.548995784495333, 0.26822563829726453, 0.939935607906707, 0.7669639823914856, 0.6153563680816531, 0.987299395852277, 0.9165552088836569, 0.9578777813200472, 0.9606579965435642, 0.8736000074030474, 0.9648981511000393, 0.9340165972348514, 0.8306448059224381, 0.9719185208800314, 0.9073751979261385, 0.7876896044418285, 0.9789388906600236, 0.8807337986174257, 0.744734402961219, 0.9859592604400157, 0.854092399308713, 0.7017792014806096, 0.9929796302200079, 0.827451, 0.658824, 1.0 };
const std::vector<double> CT_Coronary_Arteries = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4500118275916228, 0.4500118275916228, 0.4500118275916228, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };
const std::vector<double> CT_Coronary_Arteries_2 = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9656552241557803, 0.8190454269480035, 0.6544202723703982, 0.916186187307597, 0.916186187307597, 1.0, 0.9266629138941475, 0.9266629138941475, 1.0, 0.9371396404806978, 0.9371396404806978, 1.0, 0.9476163670672482, 0.9476163670672482, 1.0, 0.9580930936537986, 0.9580930936537986, 1.0, 0.9685698202403489, 0.9685698202403489, 1.0, 0.9790465468268993, 0.9790465468268993, 1.0, 0.9895232734134496, 0.9895232734134496, 1.0, 1.0, 1.0, 1.0 };
const std::vector<double> CT_Coronary_Arteries_3 = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.89207772147651, 0.779889799970822, 0.667701878465134, 0.9689464493280826, 0.9689464493280826, 0.9689464493280826, 0.9728281431620722, 0.9728281431620722, 0.9728281431620722, 0.976709836996062, 0.976709836996062, 0.976709836996062, 0.9805915308300516, 0.9805915308300516, 0.9805915308300516, 0.9844732246640413, 0.9844732246640413, 0.9844732246640413, 0.9883549184980309, 0.9883549184980309, 0.9883549184980309, 0.9922366123320207, 0.9922366123320207, 0.9922366123320207, 0.9961183061660104, 0.9961183061660104, 0.9961183061660104, 1.0, 1.0, 1.0 };
const std::vector<double> CT_Cropped_Volume_Bone = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.24765636133333335, 0.24765636133333335, 0.24765636133333335, 0.4872730884266669, 0.4872730884266669, 0.4872730884266669, 0.7268898155200002, 0.7268898155200002, 0.7268898155200002, 0.9665065426133335, 0.9665065426133335, 0.9665065426133335, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };
const std::vector<double> CT_Fat = { 0.3, 0.3, 1.0, 0.3, 0.6670182421227198, 0.6329817578772803, 0.28160602258469264, 0.9386867419489755, 0.3429192806357172, 0.08326223337515695, 0.2775407779171899, 0.805721455457967, 0.9669218928484555, 0.1786652746740226, 0.003324252385001116, 1.0, 0.0, 0.0, 1.0, 0.547511682238218, 0.02249055724715368, 1.0, 0.8631026292532583, 0.0586702444236067, 1.0, 0.792748175596601, 0.08882221387065586, 1.0, 0.7223937219399437, 0.11897418331770503, 1.0, 0.6520392682832864, 0.1491261527647542, 1.0, 0.5816848146266291, 0.17927812221180334, 1.0, 0.511330360969972, 0.20943009165885246, 1.0, 0.44097590731331465, 0.23958206110590163, 1.0, 0.37062145365665733, 0.2697340305529508, 1.0, 0.300267, 0.299886 };
const std::vector<double> CT_Liver_Vasculature = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5845211248929022, 0.3982586407873642, 0.1574415285924567, 0.8957150251289807, 0.8928962014963727, 0.8759854158636265, 0.9639416885340687, 0.9629670321117239, 0.9571198391078101, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };
const std::vector<double> CT_Lung = { 0.3, 0.3, 1.0, 0.10239999999999996, 0.10239999999999996, 1.0, 0.780929866666666, 0.9592555199999998, 0.10256312266666665, 0.8952003169451074, 0.2575079828162291, 0.039701661479713594, 0.9039336238663485, 0.26104898424821, 0.06139318968973746, 0.9126669307875895, 0.26458998568019093, 0.08308471789976134, 0.9214002377088306, 0.2681309871121718, 0.10477624610978518, 0.9301335446300716, 0.27167198854415275, 0.12646777431980905, 0.9388668515513127, 0.27521298997613364, 0.14815930252983295, 0.9476001584725537, 0.2787539914081145, 0.1698508307398568, 0.9563334653937947, 0.28229499284009546, 0.19154235894988064, 0.9650667723150358, 0.28583599427207634, 0.21323388715990454, 0.9738000792362769, 0.2893769957040573, 0.2349254153699284, 0.9825333861575178, 0.29291799713603817, 0.25661694357995224, 0.9912666930787589, 0.29645899856801905, 0.2783084717899761, 1.0, 0.3, 0.3 };
const std::vector<double> CT_MIP = { 0.0, 0.0, 0.0, 0.17027184829462763, 0.17027184829462763, 0.17027184829462763, 0.34054369658925504, 0.34054369658925504, 0.34054369658925504, 0.5108155448838827, 0.5108155448838827, 0.5108155448838827, 0.6810873931785102, 0.6810873931785102, 0.6810873931785102, 0.8513592414731378, 0.8513592414731378, 0.8513592414731378, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };
const std::vector<double> CT_Muscle = { 0.0, 0.0, 0.0, 0.07776813464533544, 0.035551066324152655, 0.0211085341605914, 0.1555362692906708, 0.07110213264830527, 0.04221706832118278, 0.23330440393600624, 0.10665319897245792, 0.06332560248177417, 0.31107253858134165, 0.14220426529661057, 0.08443413664236557, 0.38884067322667704, 0.1777553316207632, 0.10554267080295696, 0.4666088078720125, 0.21330639794491585, 0.12665120496354834, 0.5443769425173478, 0.24885746426906846, 0.14775973912413973, 0.8876071755428552, 0.6187989086271305, 0.3198655428635043, 0.9861203976910636, 0.9146542537959252, 0.9581884633141022, 0.9596754980758864, 0.8720158781632711, 0.9651570527617519, 0.9332305984607091, 0.8293775025306169, 0.9721256422094015, 0.9067856988455318, 0.7867391268979627, 0.9790942316570511, 0.8803407992303546, 0.7441007512653084, 0.9860628211047008, 0.8538958996151773, 0.7014623756326542, 0.9930314105523503, 0.827451, 0.658824, 1.0 };
const std::vector<double> CT_Pulmonary_Arteries = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04806068099773129, 0.03664038723371643, 0.02188902783427189, 0.6795313311902176, 0.2541627826891003, 0.09585714641603041, 0.803235417090686, 0.34183856326368567, 0.42056045595611835, 0.7636674941448655, 0.7636674941448655, 0.7636674941448655, 0.7932090573767572, 0.7932090573767572, 0.7932090573767572, 0.822750620608649, 0.822750620608649, 0.822750620608649, 0.8522921838405408, 0.8522921838405408, 0.8522921838405408, 0.8818337470724327, 0.8818337470724327, 0.8818337470724327, 0.9113753103043245, 0.9113753103043245, 0.9113753103043245, 0.9409168735362163, 0.9409168735362163, 0.9409168735362163, 0.9704584367681082, 0.9704584367681082, 0.9704584367681082, 1.0, 1.0, 1.0 };
const std::vector<double> CT_Soft_Tissue = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.09104926499999999, 0.09104926499999999, 0.09104926499999999, 0.9896119916000008, 0.9896119916000008, 0.9896119916000008, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 };

static const std::map<std::string, std::vector<double>> COLORMAPS = {
    { "SIMPLE", SIMPLE },
    { "GRAY", GRAY },
    { "TURBO", TURBO },
    { "CT", CT },
    { "CT-AAA", CT_AAA },
    { "CT-AAA2", CT_AAA2 },
    { "CT-Cardiac", CT_Cardiac },
    { "CT-CA", CT_Chest_Contrast_Enhanced },
    { "CT-CV", CT_Chest_Vessels },
    { "CT-Fat", CT_Fat },
    { "CT-Lung", CT_Lung },
    { "CT-Muscle", CT_Muscle },
    { "CT-Pulm", CT_Pulmonary_Arteries },
    { "PET", PET },
    { "BONE", BONE },
    { "HOT IRON", HOT_IRON },
    { "MAGMA", MAGMA },
    { "COOL", COOL }
};

std::vector<std::string> Colormaps::availableColormaps()
{
    std::vector<std::string> n;
    n.reserve(COLORMAPS.size());
    for (const auto& [key, value] : COLORMAPS)
        n.push_back(key);
    return n;
}

double interpolate(double x, double x0, double x1, double y0, double y1)
{
    return y0 + (x - x0) * (y1 - y0) / (x1 - x0);
}

std::vector<double> interpolateColormap(const std::vector<double>& map)
{
    const auto N = map.size() / 3;
    const double mstep = 1.0 / (N - 1);
    const double step = 1.0 / 255.0;
    std::vector<double> res;
    res.reserve(256 * 3);
    double x0 = 0;
    double x1 = mstep;
    int y0_ind = 0;
    for (int i = 0; i < 256; ++i) {
        const auto x = step * i;
        while (x1 <= x && y0_ind < N - 2) {
            x0 = x1;
            x1 += mstep;
            y0_ind++;
        }
        for (int j = 0; j < 3; ++j) {
            res.push_back(interpolate(x, x0, x1, map[y0_ind * 3 + j], map[(y0_ind + 1) * 3 + j]));
        }
    }
    return res;
}

const std::vector<double>& Colormaps::colormap(const std::string& name)
{
    if (!COLORMAPS.contains(name)) {
        return colormap("GRAY");
    }
    return COLORMAPS.at(name);
}
std::vector<double> Colormaps::colormapLongForm(const std::string& name)
{
    if (!COLORMAPS.contains(name)) {
        return interpolateColormap(colormap("GRAY"));
    }
    return interpolateColormap(COLORMAPS.at(name));
}

bool Colormaps::haveColormap(const std::string& name)
{
    return COLORMAPS.contains(name);
}

std::array<double, 4> HSVtoRGB(double H, double S, double V, double alpha = 1.0)
{
    if (S == 0) {
        std::array res = { V, V, V, alpha };
        return res;
    } else {
        auto var_h = H * 6;
        if (var_h == 6)
            var_h = 0; // H must be < 1
        const auto var_i = int(var_h); // Or ... var_i = floor( var_h )
        const auto var_1 = V * (1 - S);
        const auto var_2 = V * (1 - S * (var_h - var_i));
        const auto var_3 = V * (1 - S * (1 - (var_h - var_i)));
        double var_r, var_g, var_b;
        if (var_i == 0) {
            var_r = V;
            var_g = var_3;
            var_b = var_1;
        } else if (var_i == 1) {
            var_r = var_2;
            var_g = V;
            var_b = var_1;
        } else if (var_i == 2) {
            var_r = var_1;
            var_g = V;
            var_b = var_3;
        } else if (var_i == 3) {
            var_r = var_1;
            var_g = var_2;
            var_b = V;
        } else if (var_i == 4) {
            var_r = var_3;
            var_g = var_1;
            var_b = V;
        } else {
            var_r = V;
            var_g = var_1;
            var_b = var_2;
        }

        std::array res = { var_r, var_g, var_b, alpha };
        return res;
    }
}

std::array<double, 4> Colormaps::discreetColor(int idx, double alpha)
{
    std::array<double, 4> c;
    if (idx < 1)
        c = { 0, 0, 0, alpha };
    else {
        constexpr auto golden_ratio_conjugate = 1 / std::numbers::phi_v<double>;
        const double h = std::fmod(golden_ratio_conjugate * idx, 1);
        c = HSVtoRGB(h, 0.65, 0.95, alpha);
    }
    return c;
}
